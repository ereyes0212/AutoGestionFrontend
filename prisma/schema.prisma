generator client {
  provider = "prisma-client-js"
  output   = "../lib/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model ConfiguracionAprobacion {
  Id                          String                        @id @db.VarChar(36)
  puesto_id                   String?                       @db.VarChar(36)
  Descripcion                 String                        @db.VarChar(100)
  Tipo                        String                        @db.VarChar(50)
  nivel                       Int
  Activo                      Boolean                       @db.Bit(1)
  Created_at                  DateTime?                     @db.DateTime(6)
  Updated_at                  DateTime?                     @db.DateTime(6)
  Adicionado_por              String?                       @db.VarChar(100)
  Modificado_por              String?                       @db.VarChar(100)
  Puesto                      Puesto?                       @relation(fields: [puesto_id], references: [Id], onDelete: NoAction, onUpdate: NoAction, map: "FK_ConfiguracionAprobacion_Puesto_puesto_id")
  SolicitudVacacionAprobacion SolicitudVacacionAprobacion[]

  @@index([puesto_id], map: "IX_ConfiguracionAprobacion_puesto_id")
}

model DetalleVoucherPagos {
  Id              String          @id @db.VarChar(36)
  VoucherPagoId   String          @db.VarChar(36)
  TipoDeduccionId String          @db.VarChar(36)
  Monto           Decimal
  created_at      DateTime?       @db.DateTime(6)
  updated_at      DateTime?       @db.DateTime(6)
  adicionado_por  String?         @db.LongText
  modificado_por  String?         @db.LongText
  TipoDeducciones TipoDeducciones @relation(fields: [TipoDeduccionId], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "FK_DetalleVoucherPagos_TipoDeducciones_TipoDeduccionId")
  VoucherPagos    VoucherPagos    @relation(fields: [VoucherPagoId], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "FK_DetalleVoucherPagos_VoucherPagos_VoucherPagoId")

  @@index([TipoDeduccionId], map: "IX_DetalleVoucherPagos_TipoDeduccionId")
  @@index([VoucherPagoId], map: "IX_DetalleVoucherPagos_VoucherPagoId")
}

model Empleados {
  id                          String                        @id @db.VarChar(36)
  puesto_id                   String                        @db.VarChar(36)
  jefe_id                     String?                       @db.VarChar(36)
  nombre                      String                        @db.VarChar(100)
  apellido                    String                        @db.VarChar(100)
  correo                      String                        @db.LongText
  FechaNacimiento             DateTime?                     @db.DateTime(6)
  Vacaciones                  Int
  genero                      String                        @db.LongText
  activo                      Boolean                       @db.Bit(1)
  created_at                  DateTime?                     @db.DateTime(6)
  updated_at                  DateTime?                     @db.DateTime(6)
  adicionado_por              String?                       @db.LongText
  modificado_por              String?                       @db.LongText
  Empleados                   Empleados?                    @relation("EmpleadosToEmpleados", fields: [jefe_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_Empleados_Empleados_jefe_id")
  other_Empleados             Empleados[]                   @relation("EmpleadosToEmpleados")
  Puesto                      Puesto                        @relation(fields: [puesto_id], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "FK_Empleados_Puesto_puesto_id")
  ReporteDise_o               ReporteDise_o[]
  SolicitudVacacion           SolicitudVacacion[]
  SolicitudVacacionAprobacion SolicitudVacacionAprobacion[]
  Usuarios                    Usuarios?
  VoucherPagos                VoucherPagos[]

  @@index([jefe_id], map: "IX_Empleados_jefe_id")
  @@index([puesto_id], map: "IX_Empleados_puesto_id")
}

model Permiso {
  id          String       @id @default(uuid())
  nombre      String       @unique
  descripcion String
  createAt    DateTime     @default(now())
  updateAt    DateTime     @updatedAt
  activo      Boolean
  roles       RolPermiso[]
}

model Puesto {
  Id                      String                    @id @db.VarChar(36)
  Nombre                  String                    @db.VarChar(100)
  Descripcion             String                    @db.VarChar(100)
  Activo                  Boolean                   @db.Bit(1)
  Created_at              DateTime?                 @db.DateTime(6)
  Updated_at              DateTime?                 @db.DateTime(6)
  Adicionado_por          String?                   @db.LongText
  Modificado_por          String?                   @db.LongText
  ConfiguracionAprobacion ConfiguracionAprobacion[]
  Empleados               Empleados[]
  SolicitudVacacion       SolicitudVacacion[]
}

model ReporteDise_o {
  Id             String      @id @db.VarChar(36)
  EmpleadoId     String      @db.VarChar(36)
  SeccionId      String      @db.VarChar(36)
  FechaRegistro  DateTime    @db.DateTime(6)
  PaginaInicio   Int
  PaginaFin      Int
  HoraInicio     DateTime    @db.Time(6)
  HoraFin        DateTime    @db.Time(6)
  Observacion    String?     @db.LongText
  created_at     DateTime?   @db.DateTime(6)
  updated_at     DateTime?   @db.DateTime(6)
  adicionado_por String?     @db.LongText
  modificado_por String?     @db.LongText
  Empleados      Empleados   @relation(fields: [EmpleadoId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_ReporteDiseño_Empleados_EmpleadoId")
  TipoSeccion    TipoSeccion @relation(fields: [SeccionId], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "FK_ReporteDiseño_TipoSeccion_SeccionId")

  @@index([EmpleadoId], map: "IX_ReporteDiseño_EmpleadoId")
  @@index([SeccionId], map: "IX_ReporteDiseño_SeccionId")
  @@map("ReporteDiseño")
}

model RolPermiso {
  id        String   @id @default(uuid())
  rolId     String
  permisoId String
  createAt  DateTime @default(now())

  permiso Permiso @relation(fields: [permisoId], references: [id])
  rol     Rol     @relation(fields: [rolId], references: [id])

  @@unique([rolId, permisoId])
  @@index([permisoId], map: "RolPermiso_permisoId_fkey")
}

model Rol {
  id          String       @id @default(uuid())
  nombre      String       @unique
  descripcion String
  createAt    DateTime     @default(now())
  updateAt    DateTime     @updatedAt
  activo      Boolean
  permisos    RolPermiso[]
  usuarios    Usuarios[]
}

model SolicitudVacacion {
  Id                          String                        @id @db.VarChar(36)
  EmpleadoId                  String                        @db.VarChar(36)
  PuestoId                    String                        @db.VarChar(36)
  FechaSolicitud              DateTime                      @db.DateTime(6)
  FechaInicio                 DateTime                      @db.DateTime(6)
  FechaFin                    DateTime                      @db.DateTime(6)
  Aprobado                    Boolean?
  Descripcion                 String                        @db.VarChar(250)
  CreatedAt                   DateTime                      @db.DateTime(6)
  UpdatedAt                   DateTime?                     @db.DateTime(6)
  Empleados                   Empleados                     @relation(fields: [EmpleadoId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_SolicitudVacacion_Empleados_EmpleadoId")
  Puesto                      Puesto                        @relation(fields: [PuestoId], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "FK_SolicitudVacacion_Puesto_PuestoId")
  SolicitudVacacionAprobacion SolicitudVacacionAprobacion[]

  @@index([EmpleadoId], map: "IX_SolicitudVacacion_EmpleadoId")
  @@index([PuestoId], map: "IX_SolicitudVacacion_PuestoId")
}

model SolicitudVacacionAprobacion {
  Id                        String                  @id @db.VarChar(36)
  SolicitudVacacionId       String                  @db.VarChar(36)
  ConfiguracionAprobacionId String                  @db.VarChar(36)
  EmpleadoAprobadorId       String?                 @db.VarChar(36)
  Nivel                     Int
  Descripcion               String                  @db.LongText
  Estado                    String                  @db.VarChar(50)
  CreatedAt                 DateTime                @db.DateTime(6)
  FechaDecision             DateTime?               @db.DateTime(6)
  Comentarios               String?                 @db.LongText
  UpdatedAt                 DateTime?               @db.DateTime(6)
  ConfiguracionAprobacion   ConfiguracionAprobacion @relation(fields: [ConfiguracionAprobacionId], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "FK_SolicitudVacacionAprobacion_ConfiguracionAprobacion_Configur~")
  Empleados                 Empleados?              @relation(fields: [EmpleadoAprobadorId], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "FK_SolicitudVacacionAprobacion_Empleados_EmpleadoAprobadorId")
  SolicitudVacacion         SolicitudVacacion       @relation(fields: [SolicitudVacacionId], references: [Id], onDelete: Cascade, onUpdate: NoAction, map: "FK_SolicitudVacacionAprobacion_SolicitudVacacion_SolicitudVacac~")

  @@index([ConfiguracionAprobacionId], map: "IX_SolicitudVacacionAprobacion_ConfiguracionAprobacionId")
  @@index([EmpleadoAprobadorId], map: "IX_SolicitudVacacionAprobacion_EmpleadoAprobadorId")
  @@index([SolicitudVacacionId], map: "IX_SolicitudVacacionAprobacion_SolicitudVacacionId")
}

model TipoDeducciones {
  Id                  String                @id @db.VarChar(36)
  Nombre              String                @db.VarChar(100)
  Descripcion         String                @db.VarChar(100)
  Activo              Boolean               @db.Bit(1)
  Created_at          DateTime?             @db.DateTime(6)
  Updated_at          DateTime?             @db.DateTime(6)
  Adicionado_por      String?               @db.LongText
  Modificado_por      String?               @db.LongText
  DetalleVoucherPagos DetalleVoucherPagos[]
}

model TipoSeccion {
  Id             String          @id @db.VarChar(36)
  Nombre         String          @db.VarChar(100)
  Descripcion    String          @db.VarChar(100)
  Activo         Boolean         @db.Bit(1)
  Created_at     DateTime?       @db.DateTime(6)
  Updated_at     DateTime?       @db.DateTime(6)
  Adicionado_por String?         @db.LongText
  Modificado_por String?         @db.LongText
  ReporteDise_o  ReporteDise_o[]
}

model TipoSolicitud {
  Id             String    @id @db.VarChar(36)
  Nombre         String    @db.VarChar(100)
  Descripcion    String    @db.VarChar(100)
  activo         Boolean   @db.Bit(1)
  created_at     DateTime? @db.DateTime(6)
  updated_at     DateTime? @db.DateTime(6)
  adicionado_por String?   @db.LongText
  modificado_por String?   @db.LongText
}

model Usuarios {
  id                  String    @id @db.VarChar(36)
  empleado_id         String    @unique(map: "IX_Usuarios_empleado_id") @db.VarChar(36)
  usuario             String    @db.VarChar(50)
  contrasena          String    @db.LongText
  DebeCambiarPassword Boolean?
  created_at          DateTime? @db.DateTime(6)
  updated_at          DateTime? @db.DateTime(6)
  rol_id              String    @db.VarChar(36)
  activo              Boolean   @db.Bit(1)
  adicionado_por      String?   @db.LongText
  modificado_por      String?   @db.LongText
  Empleados           Empleados @relation(fields: [empleado_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_Usuarios_Empleados_empleado_id")
  rol                 Rol       @relation(fields: [rol_id], references: [id])

  @@index([rol_id], map: "IX_Usuarios_rol_id")
}

model VoucherPagos {
  Id                  String                @id @db.VarChar(36)
  EmpleadoId          String                @db.VarChar(36)
  FechaPago           DateTime              @db.DateTime(6)
  DiasTrabajados      Int
  SalarioDiario       Decimal
  SalarioMensual      Decimal
  NetoPagar           Decimal
  Observaciones       String                @db.LongText
  created_at          DateTime?             @db.DateTime(6)
  updated_at          DateTime?             @db.DateTime(6)
  adicionado_por      String?               @db.LongText
  modificado_por      String?               @db.LongText
  DetalleVoucherPagos DetalleVoucherPagos[]
  Empleados           Empleados             @relation(fields: [EmpleadoId], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "FK_VoucherPagos_Empleados_EmpleadoId")

  @@index([EmpleadoId], map: "IX_VoucherPagos_EmpleadoId")
}
